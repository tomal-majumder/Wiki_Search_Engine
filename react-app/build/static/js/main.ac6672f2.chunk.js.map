{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","Component","constructor","props","super","this","setSearchQuery","query","setState","getStemSearchResults","state","trim","length","isLoading","hasSearched","noAnswer","gotResult","firstTimeSearch","textResults","imageResults","currentPage","axios","get","params","optionName","searchType","then","response","data","textResult","imageResult","success","result","searchTime","catch","err","console","log","setSearchType","event","target","value","scrollToResults","newPage","resultsRef","current","scrollIntoView","behavior","openModal","filename","window","scrollTo","index","indexOf","selectedImage","showModal","currentImageIndex","closeModal","prevImage","prev","newIndex","nextImage","shareImage","url","navigator","clipboard","writeText","alert","resultsPerPage","createRef","render","S3_BUCKET_URL","process","results","totalResults","startIndex","endIndex","paginatedResults","slice","createElement","Container","fluid","Row","className","Col","md","lg","type","placeholder","onChange","e","Button","variant","onClick","ClipLoader","size","color","checked","ref","style","fontSize","map","key","animationDelay","href","rel","docId","chunkedBody","src","alt","onError","display","Math","min","disabled","stopPropagation","open","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac6672f2.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { Button } from 'react-bootstrap';\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      textResults: [],\n      imageResults: [],\n      isLoading: false,\n      noAnswer: false,\n      gotResult: false,\n      searchType: \"TEXT\",\n      firstTimeSearch: true,\n      searchTime: 0,\n      hasSearched: false,\n      optionName: \"tfidf\",\n      currentPage: 1,\n      resultsPerPage: 10,\n      showModal: false,\n      selectedImage: null,\n      currentImageIndex: 0\n    };\n\n    this.resultsRef = React.createRef();\n  }\n\n  setSearchQuery = (query) => {\n    this.setState({ query });\n  }\n\n  getStemSearchResults = () => {\n    const query = this.state.query.trim();\n    if (query.length === 0) return;\n\n    this.setState({\n      isLoading: true,\n      hasSearched: true,\n      noAnswer: false,\n      gotResult: false,\n      firstTimeSearch: false,\n      textResults: [],\n      imageResults: [],\n      currentPage: 1\n    });\n\n    const API_BASE = process.env.REACT_APP_API_URL || 'http://localhost:3001';\n\n    axios.get(`${API_BASE}/query-stem`, {\n      params: {\n        optionName: this.state.optionName,\n        searchType: this.state.searchType,\n        query: query\n      }\n    }).then((response) => {\n      this.setState({\n        isLoading: false,\n        textResults: response.data.textResult,\n        imageResults: response.data.imageResult\n      });\n\n      if (response.data.success === true && response.data.result.length === 0) {\n        this.setState({ noAnswer: true, firstTimeSearch: true });\n      } else {\n        this.setState({\n          gotResult: true,\n          noAnswer: false,\n          searchTime: response.data.searchTime\n        });\n      }\n    }).catch(err => {\n      this.setState({\n        gotResult: false,\n        noAnswer: false,\n        isLoading: false\n      });\n      console.log(err);\n    });\n  }\n\n  setSearchType = (event) => {\n    this.setState({ searchType: event.target.value, currentPage: 1 });\n  }\n\n  scrollToResults = (newPage) => {\n    this.setState({ currentPage: newPage }, () => {\n      if (this.resultsRef.current) {\n        this.resultsRef.current.scrollIntoView({ behavior: 'smooth' });\n      }\n    });\n  }\n    openModal = (filename) => {\n      window.scrollTo(0, 0); \n      const index = this.state.imageResults.indexOf(filename);\n      this.setState({ selectedImage: filename, showModal: true, currentImageIndex: index });\n    };\n\n\n  closeModal = () => {\n    this.setState({ selectedImage: null, showModal: false });\n  }\n\n  prevImage = () => {\n    this.setState(prev => {\n      const newIndex = (prev.currentImageIndex - 1 + prev.imageResults.length) % prev.imageResults.length;\n      return {\n        selectedImage: prev.imageResults[newIndex],\n        currentImageIndex: newIndex\n      };\n    });\n  }\n\n  nextImage = () => {\n    this.setState(prev => {\n      const newIndex = (prev.currentImageIndex + 1) % prev.imageResults.length;\n      return {\n        selectedImage: prev.imageResults[newIndex],\n        currentImageIndex: newIndex\n      };\n    });\n  }\n\n  shareImage = (url) => {\n    navigator.clipboard.writeText(url);\n    alert(\"Image URL copied to clipboard!\");\n  }\n\n  render() {\n    const S3_BUCKET_URL = process.env.REACT_APP_S3_BUCKET_URL || 'https://your-bucket-name.s3.amazonaws.com';\n\n    const {\n      currentPage, resultsPerPage, searchType,\n      textResults, imageResults, showModal, selectedImage\n    } = this.state;\n\n    const results = searchType === \"TEXT\" ? textResults : imageResults;\n    const totalResults = results.length;\n    const startIndex = (currentPage - 1) * resultsPerPage;\n    const endIndex = startIndex + resultsPerPage;\n    const paginatedResults = results.slice(startIndex, endIndex);\n\n    return (\n      <div>\n\n        <Container fluid>\n          <Row className=\"justify-content-center\">\n            <Col md=\"auto\">\n              <h1 className=\"branding-title\">WikiSearch IR</h1>\n              {!this.state.hasSearched && (\n                <p className=\"branding-subtitle\">\n                  Real-time ranked retrieval over a curated Wikipedia corpus.\n                </p>\n              )}\n            </Col>\n          </Row>\n\n          <div className={`search-header ${this.state.hasSearched ? 'float-up' : ''}`}>\n            <Row className=\"mt-4 justify-content-center align-items-center\">\n              <Col lg={10}>\n                <div className=\"d-flex gap-2\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg flex-grow-1\"\n                    placeholder=\"🔍 Search football or world war topics (i.e. Fifa World Cup or Dunkirk)...\"\n                    onChange={event => this.setSearchQuery(event.target.value)}\n                  />\n                  <select\n                    className=\"form-select form-select-lg\"\n                    onChange={(e) => this.setState({ optionName: e.target.value })}\n                  >\n                    <option value=\"tfidf\">TF-IDF</option>\n                    <option value=\"bm25\">BM25</option>\n                  </select>\n                  <Button className=\"btn-lg\" variant=\"primary\" onClick={this.getStemSearchResults}>\n                    {this.state.isLoading ? <ClipLoader size={18} color=\"#fff\" /> : \"Search\"}\n                  </Button>\n                </div>\n              </Col>\n            </Row>\n\n            <Row className=\"mt-3 justify-content-center\">\n              <Col lg={9}>\n                <div className=\"alert alert-info p-2 small shadow-sm\">\n                  ⚠️ This demo search engine runs on a limited test dataset due to resource constraints. Ranking result does not represent full-scale performance.\n                </div>\n              </Col>\n            </Row>\n\n            {this.state.hasSearched && (\n              <div className=\"radio-toggle mt-4 mb-3 text-center\">\n                <label>\n                  <input type=\"radio\" value=\"TEXT\" checked={searchType === \"TEXT\"} onChange={this.setSearchType} />\n                  <span className=\"ms-2 me-4\">Text</span>\n                </label>\n                <label>\n                  <input type=\"radio\" value=\"IMAGE\" checked={searchType === \"IMAGE\"} onChange={this.setSearchType} />\n                  <span className=\"ms-2\">Image</span>\n                </label>\n              </div>\n            )}\n\n            {this.state.hasSearched && (\n              <Row ref={this.resultsRef} className=\"justify-content-center results-section\">\n                <Col lg={8}>\n                  {this.state.gotResult && (\n                    <div className=\"mt-3\" style={{ fontSize: \"12px\" }}>\n                      Search results found in <span>{this.state.searchTime}</span> seconds.\n                    </div>\n                  )}\n\n                  {this.state.noAnswer && !this.state.isLoading && (\n                    <div style={{ fontSize: \"14px\" }}>\n                      No search results found.\n                    </div>\n                  )}\n\n                  {searchType === \"TEXT\" && paginatedResults.map((result, index) => (\n                    <div key={index} className=\"mt-3 search-result-animated\" style={{ animationDelay: `${index * 100}ms` }}>\n                      <a href={result.url} target=\"_blank\" rel=\"noopener noreferrer\">{result.docId}</a>\n                      <div style={{ fontSize: \"12px\" }}>{result.chunkedBody}..</div>\n                    </div>\n                  ))}\n\n                  {searchType === \"IMAGE\" && (\n                    <div className=\"image-grid\">\n                      {paginatedResults.map((filename, index) => (\n                        <img\n                          key={index}\n                          src={`${S3_BUCKET_URL}/${filename}.jpg`}\n                          alt={`img-${index}`}\n                          className=\"image-item\"\n                          onClick={() => this.openModal(filename)}\n                          onError={(e) => { e.target.style.display = 'none'; }}\n                        />\n                      ))}\n                    </div>\n                  )}\n\n\n                  {totalResults > 0 && (\n                    <div className=\"mt-4 d-flex justify-content-between align-items-center\" style={{ fontSize: \"13px\" }}>\n                      <span>\n                        Showing {startIndex + 1}–{Math.min(endIndex, totalResults)} of {totalResults} results\n                      </span>\n                      <div>\n                        <Button className=\"btn-sm me-2\" disabled={currentPage === 1} onClick={() => this.scrollToResults(currentPage - 1)}>\n                          Prev\n                        </Button>\n                        <Button className=\"btn-sm\" disabled={endIndex >= totalResults} onClick={() => this.scrollToResults(currentPage + 1)}>\n                          Next\n                        </Button>\n                      </div>\n                    </div>\n                  )}\n                </Col>\n              </Row>\n            )}\n\n          {showModal && (\n            <div className=\"image-modal\" onClick={this.closeModal}>\n              <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n                <span className=\"modal-close\" onClick={this.closeModal}>&times;</span>\n\n                <button className=\"modal-nav modal-prev\" onClick={this.prevImage}>&lt;</button>\n                <img\n                  src={`${S3_BUCKET_URL}/${selectedImage}.jpg`}\n                  alt=\"Zoomed\"\n                />\n                <button className=\"modal-nav modal-next\" onClick={this.nextImage}>&gt;</button>\n\n                <div className=\"modal-actions\">\n                  <button onClick={() => window.open(`${S3_BUCKET_URL}/${selectedImage}.jpg`, '_blank')}>\n                    Download\n                  </button>\n                  <button onClick={() => this.shareImage(`${S3_BUCKET_URL}/${selectedImage}.jpg`)}>\n                    Share\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n\n            \n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}