name: Deploy to EC2

on:
  push:
    branches: [main]
    paths:
      - "backend/**"
      - "react-app/**"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # === Detect which folder changed ===
      - name: Check if backend changed
        id: backend
        run: echo "changed=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^backend/' && echo true || echo false)" >> $GITHUB_OUTPUT

      - name: Check if frontend changed
        id: frontend
        run: echo "changed=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^react-app/' && echo true || echo false)" >> $GITHUB_OUTPUT

      # === Build React frontend ===
      - name: Build React frontend
        if: steps.frontend.outputs.changed == 'true'
        run: |
          cd react-app
          npm install
          npm run build

      # === Copy React build to EC2 ===
      - name: Copy React build folder to EC2
        if: steps.frontend.outputs.changed == 'true'
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "react-app/build"
          target: "~/react-frontend"

      # === Restart Frontend Container ===
      - name: Restart frontend Docker container on EC2
        if: steps.frontend.outputs.changed == 'true'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/react-frontend
            echo '
            FROM nginx:alpine
            COPY build/ /usr/share/nginx/html
            EXPOSE 80
            CMD ["nginx", "-g", "daemon off;"]
            ' > Dockerfile

            docker stop wiki-frontend-container || true
            docker rm wiki-frontend-container || true
            docker build -t wiki-frontend .
            docker run -d -p 80:80 --name wiki-frontend-container wiki-frontend

      # === Build and Save Backend Docker Image ===
      - name: Build backend Docker image
        if: steps.backend.outputs.changed == 'true'
        run: |
          cd backend
          docker build -t wiki-backend .
          docker save wiki-backend | gzip > backend-image.tar.gz

      # === Copy backend files and image to EC2 ===
      - name: Copy backend image and env to EC2
        if: steps.backend.outputs.changed == 'true'
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: |
            backend-image.tar.gz
          target: "~/backend"

      # === Restart Backend Container ===
      - name: Restart backend container on EC2
        if: steps.backend.outputs.changed == 'true'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/backend

            # Create .env file
            echo '
            NODE_ENV=production
            PORT=3001
            MONGODB_URI=${{ secrets.MONGODB_URI }}
            DEBUG=searchengine:*
            ' > .env

            docker stop wiki-backend-container || true
            docker rm wiki-backend-container || true
            docker load < backend-image.tar.gz
            docker run -d --env-file .env -p 3001:3001 --name wiki-backend-container wiki-backend
            rm backend-image.tar.gz
